#%RAML 0.8
---
title: POC Product MicroService
version: v1
baseUri: http://localhost:8080/
mediaType:  application/json

schemas:
 - product: !include product.schema.json

resourceTypes:
  - collection:
      description: Collection of available <<resourcePathName>>
      get:
        description: Get a list of <<resourcePathName>>
        responses:
          200:
            body:
              application/json:
                example: |
                  <<exampleCollection>>
      post:
        description: Add a new <<resourcePathName|!singularize>>
        body:
          application/json:
            schema: |
              <<resourcePathName|!singularize>>
        responses:
          200:
            body:
              application/json:
                example: |
                    { "message": "The <<resourcePathName|!singularize>> has been properly created" }
  - collection-item:
      description: Entity representing a <<resourcePathName|!singularize>>
      get:
        description: |
          Get the <<resourcePathName|!singularize>> with <<resourcePathName|!singularize>>Id =
          {<<resourcePathName|!singularize>>Id}
        responses:
          200:
            body:
              application/json:
                example: |
                  <<exampleItem>>
          404:
            body:
              application/json:
                example: |
                  {"message": "<<resourcePathName|!singularize>> not found" }
      put:
        description: |
          Update the <<resourcePathName|!singularize>> with <<resourcePathName|!singularize>>Id =
          {<<resourcePathName|!singularize>>Id}
        responses:
          200:
            body:
              application/json:
                schema: |
                  <<resourcePathName|!singularize>>
                example: |
                  <<exampleItem>>
          404:
            body:
              application/json:
                example: |
                  {"message": "<<resourcePathName|!singularize>> not found" }

/products:
  type:
    collection:
      exampleCollection: !include products.example.json
      exampleItem: !include product.example.json
  /{productId}:
    type:
      collection-item:
        exampleItem: !include product.example.json
